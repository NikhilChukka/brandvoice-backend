"""initial schema

Revision ID: 9a5c99cfa1ba
Revises: 
Create Date: 2025-06-08 01:31:14.728117

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlmodel.sql.sqltypes import AutoString  # Import AutoString directly
from sqlalchemy.dialects import postgresql  # Add this import


# revision identifiers, used by Alembic.
revision: str = '9a5c99cfa1ba'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', AutoString(), nullable=False),
    sa.Column('hashed_password', AutoString(), nullable=False),
    sa.Column('full_name', AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('product',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('name', AutoString(), nullable=False),
    sa.Column('description', AutoString(), nullable=True),
    sa.Column('price_cents', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contentitem',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.Column('body_text', AutoString(), nullable=False),
    sa.Column('image_url', AutoString(), nullable=True),
    sa.Column('state', AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Define and create the ENUM type for schedule status if it doesn't exist
    schedulestate_type = postgresql.ENUM('scheduled', 'completed', 'cancelled', name='schedulestate', create_type=False)
    schedulestate_type.create(op.get_bind(), checkfirst=True)

    op.create_table('schedule',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('platforms', sa.JSON(), nullable=True),
    sa.Column('run_at', sa.DateTime(), nullable=False),
    sa.Column('timezone', AutoString(), nullable=False),
    sa.Column('status', schedulestate_type, nullable=False),  # Use the created type
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['content_id'], ['contentitem.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('schedule')
    op.drop_table('contentitem')
    op.drop_table('product')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')

    # Drop the ENUM type if it exists
    schedulestate_type = postgresql.ENUM('scheduled', 'completed', 'cancelled', name='schedulestate', create_type=False)
    schedulestate_type.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
